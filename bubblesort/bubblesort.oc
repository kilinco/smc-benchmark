#include "../utils.oh"

#include "bubblesort.h"

#include "dbg.h"

void cmpswapInt(void* va,void* vb)
{
  obliv int *a=va,*b=vb;
  obliv if(*a>*b) swapInt(a,b);
}

// Array sizes has to be equal!!!
void bubblesort_algo(protocolIO *io, obliv int *out){
	for(int i = 0; i < io->n; i++) {
		for(int j = 0; j < io->n; j++){
			cmpswapInt(out+j, out+i);
		}
	}
	//printf("Arrays sorted!");
	//printf("Client data revealing...\n");
	revealOblivIntArray(io->arr, out, io->n, 0);
	//printf("Client Data Revealed!\n");
}

void bubblesort(void* args) {
	protocolIO *io = (protocolIO*) args;

	int *x = malloc(sizeof(int) * ALLOC);
	int *y = malloc(sizeof(int) * ALLOC);
	load_dummy(io, &x, &y, ocCurrentParty());
	printf("Dummy Loaded!\n");
	
	obliv int *out =  malloc(sizeof(obliv int) * io->n * 2);
	feedOblivIntArray(out, x, io->n, 1);
	feedOblivIntArray(out+io->n, y, io->n, 2);
	free(x);
	free(y);
	printf("Non-obliv Data Freed!\n");
	
	io->n =  io->n * 2;
	io->arr = malloc(sizeof(int) * io->n);
	bubblesort_algo(io, out);
	free(out);
	printf("Obliv Data Freed!\n");
	log_info("Yao Gate Count: %d\n", yaoGateCount()); // - 576
}

