#define ARRAYSIZE 5
#define ENTRYSIZE 4
#parties 2

typedef int_t ENTRYSIZE*ARRAYSIZE*2 array

typedef int_t ENTRYSIZE int

typedef uint_t ENTRYSIZE sint

typedef struct_t mdata
{
	int data[ARRAYSIZE];
}

typedef struct_t zdata
{	
	int data[ARRAYSIZE*2];
}

#input 1 mdata
#output 1 zdata
#input 2 mdata
#output 2 zdata

function zdata read(mdata inp1, mdata inp2)
{
	zdata result; 
	for(sint i=0; i < ARRAYSIZE; i++)
	{
		result.data[i] = inp1.data[i];
		result.data[i + ARRAYSIZE] = inp2.data[i];
	} 
	return result;
}

function void main()
{
	zdata result = read(input1, input2);
	int temp;
	sint B, d, J, x, y, length = ARRAYSIZE*2, G = 4; /*DEFINE G LOG2CEIL(length)*/
	for (sint g = 0; g < G; g++) 
	{ 
		B = 1 << (G - g - 1); 
		for (sint b = 0; b < B; b++)                  
		{ 
			for (sint s = 0; s <= g; s++)               
			{ 
				d = 1 << (g - s);
				J = d;
				if (s == 0){
					J = 0;
				}
				for (sint j = J; j+d < (2<<g); j = j + 2*d)  
				{ 
					for (sint i = 0; i < d; i++)            
					{ 
						x = (b * (length / B)) + j + i;  
						y = x + d;
						if(y < length){   
							if(result.data[x] > result.data[y]){
								temp = result.data[x];
								result.data[x] = result.data[y];
								result.data[y] = temp;
							}
						}
					}
				}
			}
		}
	}			
	output1 = result;
	output2 = result;	
}
